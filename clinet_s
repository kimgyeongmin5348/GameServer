#include <iostream>
#include <WS2tcpip.h>
#pragma comment (lib, "WS2_32.LIB")  // 라이브러리 함수에 32빝m 64비트를 넣어두었다.


constexpr short PORT = 4000;
constexpr char SERVER_ADDR[] = "127.0.0.1";  //내 컴퓨터 이다 라는 것. 주소(내자신을 뜻하는 주소)
constexpr int BUFSIZE = 256;

bool bshutdown = false;
SOCKET server_s;
WSABUF wsabuf[1];
char buf[BUFSIZE];
WSAOVERLAPPED wsaover;
void CALLBACK send_callback(DWORD, DWORD, LPWSAOVERLAPPED, DWORD);

void read_n_send() {
	std::cout << "enter message : ";
	std::cin.getline(buf, BUFSIZE);
	wsabuf[0].buf = buf;
	wsabuf[0].len = static_cast<int> (strlen(buf)) + 1;   // 흐으음...
	if (wsabuf[0].len == 1)
		bshutdown = true;
		return;
	ZeroMemory(&wsaover, sizeof(wsaover));
	WSASend(server_s, wsabuf, 1, nullptr, 0, &wsaover, send_callback);
}

void CALLBACK recv_callback(DWORD er, DWORD recv_size, LPWSAOVERLAPPED pwsaover, DWORD sendflag)
{
	for (DWORD i = 0; i < recv_size; ++i)
		std::cout << buf[i];
	std::cout << '\n';
	read_n_send();  // 여기 추가되었음(난 이거 안적었었네..)
}


void CALLBACK send_callback(DWORD er, DWORD sent_size, LPWSAOVERLAPPED pwsaover, DWORD sendflag)
{
	wsabuf[0].len = BUFSIZE;
	DWORD recv_flag = 0;
	ZeroMemory(pwsaover, sizeof(pwsaover));
	WSARecv(server_s, wsabuf, 1, nullptr, &recv_flag, pwsaover, recv_callback);

}

int main() {

	std::wcout.imbue(std::locale("korean"));

	//운영체제 에게 MS네트웤 말고 다른 인터넷 소켓을 쓰겠다는 명령어 (이거 안하면 오류가 난다!!!) <- 윈도우에서만 쓰면 된다.---------------------
	WSADATA WSAData;
	WSAStartup(MAKEWORD(2, 0), &WSAData);
	//-------------------------------------------------------------------------------------------------------------------------------------------
	SOCKET server_s = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, nullptr, 0, WSA_FLAG_OVERLAPPED);
	SOCKADDR_IN server_a;
	server_a.sin_family = AF_INET;
	server_a.sin_port = htons(PORT);
	inet_pton(AF_INET, SERVER_ADDR, &server_a.sin_addr);
	connect(server_s, reinterpret_cast<sockaddr*> (&server_a), sizeof(server_a));
	read_n_send();
	while (false == bshutdown) {
		SleepEx(0, TRUE);  // 이거 기억하자!!!
	}
	closesocket(server_s);

	WSACleanup();  // 마지막 닫기(위에서 바꾼거 마지막 정리)
}
